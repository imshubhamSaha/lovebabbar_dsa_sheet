//{ Driver Code Starts
//Initial Template for javascript


'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(string => {
        return string.trim();
    });
    
    main();
});

function readLine() {
    return inputString[currentLine++];
}

function printList(res,n){
    let s="";
    for(let i=0;i<n;i++){
        s+=res[i];
        s+=" ";
    }
    console.log(s);
}


function main() {
    let t = parseInt(readLine());
    let i = 0;
    for(;i<t;i++)
    {
        let n = parseInt(readLine());
        let arr = new Array(n);
        let input_ar1 = readLine().split(' ').map(x=>parseInt(x));
        for(let i=0;i<n;i++){
            arr[i] = input_ar1[i];
        }
        let obj = new Solution();
        let res = obj.solve(arr, n);
        console.log(res);
        
    }
}// } Driver Code Ends



// } Driver Code Ends


//User function Template for javascript


/**
 * @param {number[]} arr
 * @param {number} n
 * @returns {string}
*/

class Solution{
    solve(arr,n){
        //code here
        
        let ans = ""
        let oneNum = ""//358
        let secondNum = ""//246
        arr.sort((a,b) => a-b);
        
        for(let i=0; i<arr.length; i +=2) oneNum += arr[i]
        
        for(let i=1; i<arr.length; i +=2) secondNum += arr[i]
        
        
       let i= oneNum.length-1
       let j= secondNum.length-1
       let carry = 0
       
       while(i>=0 || j>=0 || carry){
           let num1 = (i>=0)? oneNum[i] -"0" : 0
           let num2 = (j>=0)? secondNum[j] -"0" : 0
           
           let sum = Math.floor(num1 + num2 + carry)
               
           
           ans = Math.floor(sum%10) + ans;
           carry = Math.floor(sum/10)
           
           i--; j--
           
           
       }
       let start = 0
       for(let i= 0;i <ans.length; i++){
           if(ans[i] != "0"){
               start = i
               break
           }
       }
       
       return ans.substring(start)
    }
}


